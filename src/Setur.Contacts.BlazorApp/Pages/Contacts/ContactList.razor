@page "/contacts"

@inject IContactService ContactService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject IToastService ToastService

<PageTitle>Kişi Listesi - Setur Contacts</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>
                    <i class="fas fa-users me-2"></i>
                    Kişi Listesi
                </h2>
                <button class="btn btn-primary" @onclick="GoToAddContact">
                    <i class="fas fa-plus me-2"></i>
                    Yeni Kişi
                </button>
            </div>

            <!-- Sayfalama Kontrolleri -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="d-flex align-items-center">
                        <label class="form-label me-2 mb-0 fw-semibold text-muted">
                            <i class="fas fa-list me-1"></i>Sayfa başına:
                        </label>
                        <select class="form-select form-select-sm border-primary" style="width: auto; min-width: 80px;" @bind="pageSize" @bind:event="oninput">
                            <option value="5">5 kayıt</option>
                            <option value="10">10 kayıt</option>
                            <option value="20">20 kayıt</option>
                            <option value="50">50 kayıt</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    @if (pagedResult != null)
                    {
                        <div class="d-flex align-items-center justify-content-end">
                            <span class="badge bg-primary me-2">
                                <i class="fas fa-info-circle me-1"></i>
                                Toplam @pagedResult.TotalCount kayıt
                            </span>
                            <span class="badge bg-secondary">
                                <i class="fas fa-file-alt me-1"></i>
                                @pagedResult.TotalPages sayfa
                            </span>
                        </div>
                    }
                </div>
            </div>

            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                    <p class="mt-2">Kişiler yükleniyor...</p>
                </div>
            }
            else if (contacts.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Ad Soyad</th>
                                        <th>Şirket</th>
                                        <th>İletişim Bilgileri</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var contact in contacts)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@contact.FirstName @contact.LastName</strong>
                                            </td>
                                            <td>@contact.Company</td>
                                            <td>
                                                @if (contact.CommunicationInfos?.Any() == true)
                                                {
                                                    <div class="small">
                                                        @foreach (var comm in contact.CommunicationInfos.Take(3))
                                                        {
                                                            <span class="badge bg-info me-1">
                                                                @GetCommunicationTypeIcon(comm.Type) @comm.Value
                                                            </span>
                                                        }
                                                        @if (contact.CommunicationInfos.Count > 3)
                                                        {
                                                            <span class="badge bg-secondary">+@(contact.CommunicationInfos.Count - 3) daha</span>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">İletişim bilgisi yok</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewContact(contact.Id)" title="Görüntüle">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-success" @onclick="() => AddCommunicationInfo(contact.Id)" title="İletişim Bilgisi Ekle">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-warning" @onclick="() => EditContact(contact.Id)" title="Düzenle">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteContact(contact.Id)" title="Sil">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Sayfalama -->
                        @if (pagedResult != null && pagedResult.TotalPages > 1)
                        {
                            <div class="d-flex justify-content-between align-items-center mt-4 pt-3 border-top">
                                <!-- Sayfa Bilgisi -->
                                <div class="text-muted small">
                                    <i class="fas fa-eye me-1"></i>
                                    <strong>@((pagedResult.PageNumber - 1) * pagedResult.PageSize + 1)</strong> - 
                                    <strong>@Math.Min(pagedResult.PageNumber * pagedResult.PageSize, pagedResult.TotalCount)</strong> 
                                    arası gösteriliyor (@pagedResult.TotalCount kayıttan)
                                </div>

                                <!-- Sayfalama Navigasyonu -->
                                <nav aria-label="Sayfalama">
                                    <ul class="pagination pagination-sm mb-0">
                                        <!-- İlk Sayfa -->
                                        <li class="page-item @(pagedResult.PageNumber == 1 ? "disabled" : "")">
                                            <button class="page-link border-0 shadow-sm" @onclick="() => GoToPage(1)" disabled="@(pagedResult.PageNumber == 1)" title="İlk Sayfa">
                                                <i class="fas fa-angle-double-left"></i>
                                            </button>
                                        </li>

                                        <!-- Önceki Sayfa -->
                                        <li class="page-item @(pagedResult.HasPreviousPage ? "" : "disabled")">
                                            <button class="page-link border-0 shadow-sm" @onclick="() => GoToPage(pagedResult.PageNumber - 1)" disabled="@(!pagedResult.HasPreviousPage)" title="Önceki Sayfa">
                                                <i class="fas fa-angle-left"></i>
                                            </button>
                                        </li>

                                        <!-- Sayfa Numaraları -->
                                        @{
                                            var startPage = Math.Max(1, pagedResult.PageNumber - 2);
                                            var endPage = Math.Min(pagedResult.TotalPages, pagedResult.PageNumber + 2);
                                        }

                                        @if (startPage > 1)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link border-0 bg-transparent">...</span>
                                            </li>
                                        }

                                        @for (int i = startPage; i <= endPage; i++)
                                        {
                                            var pageNumber = i;
                                            <li class="page-item @(pageNumber == pagedResult.PageNumber ? "active" : "")">
                                                <button class="page-link border-0 shadow-sm @(pageNumber == pagedResult.PageNumber ? "bg-primary text-white" : "")" 
                                                        @onclick="() => GoToPage(pageNumber)" 
                                                        title="Sayfa @pageNumber">
                                                    @pageNumber
                                                </button>
                                            </li>
                                        }

                                        @if (endPage < pagedResult.TotalPages)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link border-0 bg-transparent">...</span>
                                            </li>
                                        }

                                        <!-- Sonraki Sayfa -->
                                        <li class="page-item @(pagedResult.HasNextPage ? "" : "disabled")">
                                            <button class="page-link border-0 shadow-sm" @onclick="() => GoToPage(pagedResult.PageNumber + 1)" disabled="@(!pagedResult.HasNextPage)" title="Sonraki Sayfa">
                                                <i class="fas fa-angle-right"></i>
                                            </button>
                                        </li>

                                        <!-- Son Sayfa -->
                                        <li class="page-item @(pagedResult.PageNumber == pagedResult.TotalPages ? "disabled" : "")">
                                            <button class="page-link border-0 shadow-sm" @onclick="() => GoToPage(pagedResult.TotalPages)" disabled="@(pagedResult.PageNumber == pagedResult.TotalPages)" title="Son Sayfa">
                                                <i class="fas fa-angle-double-right"></i>
                                            </button>
                                        </li>
                                    </ul>
                                </nav>

                                <!-- Hızlı Sayfa Atlama -->
                                <div class="d-flex align-items-center">
                                    <label class="form-label me-2 mb-0 small text-muted">Sayfa:</label>
                                    <input type="number" class="form-control form-control-sm" style="width: 70px;" 
                                           min="1" max="@pagedResult.TotalPages" value="@pagedResult.PageNumber"
                                           @onchange="(e) => GoToPage(int.Parse(e.Value?.ToString()))" />
                                    <span class="ms-2 small text-muted">/ @pagedResult.TotalPages</span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-body text-center">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h5>Henüz kişi eklenmemiş</h5>
                        <p class="text-muted">İlk kişiyi eklemek için aşağıdaki butona tıklayın.</p>
                        <button class="btn btn-primary" @onclick="GoToAddContact">
                            <i class="fas fa-plus me-2"></i>
                            İlk Kişiyi Ekle
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<ContactResponse> contacts = new();
    private PagedResult<ContactResponse>? pagedResult;
    private bool isLoading = true;
    private int currentPage = 1;
    private int pageSize = 10;

    protected override async Task OnInitializedAsync()
    {
        await LoadContacts();
    }

    protected override async Task OnParametersSetAsync()
    {
        // pageSize değiştiğinde otomatik olarak yeniden yükle
        await LoadContacts();
    }

    private async Task LoadContacts()
    {
        isLoading = true;
        try
        {
            pagedResult = await ContactService.GetPagedAsync(currentPage, pageSize);
            if (pagedResult.Success && pagedResult.Data != null)
            {
                contacts = pagedResult.Data.ToList();
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Kişiler yüklenirken hata oluştu: {ex.Message}", "Hata");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task GoToPage(int pageNumber)
    {
        if (pageNumber >= 1 && pageNumber <= (pagedResult?.TotalPages ?? 1))
        {
            currentPage = pageNumber;
            await LoadContacts();
        }
    }



    private void ViewContact(Guid contactId)
    {
        Navigation.NavigateTo($"/contacts/{contactId}");
    }

    private void AddCommunicationInfo(Guid contactId)
    {
        Navigation.NavigateTo($"/contacts/{contactId}/add-communication");
    }

    private void EditContact(Guid contactId)
    {
        Navigation.NavigateTo($"/contacts/{contactId}/edit");
    }

    private async Task DeleteContact(Guid contactId)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Bu kişiyi silmek istediğinizden emin misiniz?"))
        {
            try
            {
                var result = await ContactService.DeleteContactAsync(contactId);
                ToastService.ShowSuccess(result.Message, "Başarılı");
                await LoadContacts(); // Sayfayı yenile
            }
            catch (Exception ex)
            {
                ToastService.ShowError($"Hata oluştu: {ex.Message}", "Hata");
            }
        }
    }

    private void GoToAddContact()
    {
        Navigation.NavigateTo("/contacts/add");
    }

    private string GetCommunicationTypeIcon(CommunicationType type)
    {
        return type switch
        {
            CommunicationType.Phone => "📞",
            CommunicationType.Email => "📧",
            CommunicationType.Location => "📍",
            _ => "📋"
        };
    }
}
