@page "/contacts"

@inject IContactService ContactService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject IToastService ToastService

<PageTitle>Kişi Listesi - Setur Contacts</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>
                    <i class="fas fa-users me-2"></i>
                    Kişi Listesi
                </h2>
                <button class="btn btn-primary" @onclick="GoToAddContact">
                    <i class="fas fa-plus me-2"></i>
                    Yeni Kişi
                </button>
            </div>

            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                    <p class="mt-2">Kişiler yükleniyor...</p>
                </div>
            }
            else if (contacts.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Ad Soyad</th>
                                        <th>Şirket</th>
                                        <th>İletişim Bilgileri</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var contact in contacts)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@contact.FirstName @contact.LastName</strong>
                                            </td>
                                            <td>@contact.Company</td>
                                            <td>
                                                @if (contact.CommunicationInfos?.Any() == true)
                                                {
                                                    <div class="small">
                                                        @foreach (var comm in contact.CommunicationInfos.Take(3))
                                                        {
                                                            <span class="badge bg-info me-1">
                                                                @GetCommunicationTypeIcon(comm.Type) @comm.Value
                                                            </span>
                                                        }
                                                        @if (contact.CommunicationInfos.Count > 3)
                                                        {
                                                            <span class="badge bg-secondary">+@(contact.CommunicationInfos.Count - 3) daha</span>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">İletişim bilgisi yok</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewContact(contact.Id)" title="Görüntüle">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-success" @onclick="() => AddCommunicationInfo(contact.Id)" title="İletişim Bilgisi Ekle">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-warning" @onclick="() => EditContact(contact.Id)" title="Düzenle">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteContact(contact.Id)" title="Sil">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-body text-center">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h5>Henüz kişi eklenmemiş</h5>
                        <p class="text-muted">İlk kişiyi eklemek için aşağıdaki butona tıklayın.</p>
                        <button class="btn btn-primary" @onclick="GoToAddContact">
                            <i class="fas fa-plus me-2"></i>
                            İlk Kişiyi Ekle
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<ContactResponse> contacts = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadContacts();
    }

    private async Task LoadContacts()
    {
        isLoading = true;
        try
        {
            var result = await ContactService.GetAllContactsAsync();
            if (result.Success)
            {
                contacts = result.Data.ToList();
            }
            else
            {
                ToastService.ShowError(result.Message, "Hata");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Kişiler yüklenirken hata oluştu: {ex.Message}", "Hata");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ViewContact(Guid contactId)
    {
        Navigation.NavigateTo($"/contacts/{contactId}");
    }

    private void AddCommunicationInfo(Guid contactId)
    {
        Navigation.NavigateTo($"/contacts/{contactId}/add-communication");
    }

    private void EditContact(Guid contactId)
    {
        Navigation.NavigateTo($"/contacts/{contactId}/edit");
    }

    private async Task DeleteContact(Guid contactId)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Bu kişiyi silmek istediğinizden emin misiniz?"))
        {
            try
            {
                var result = await ContactService.DeleteContactAsync(contactId);
                if (result.Success)
                {
                    ToastService.ShowSuccess("Kişi silindi!", "Başarılı");
                    await LoadContacts();
                }
                else
                {
                    ToastService.ShowError(result.Message, "Hata");
                }
            }
            catch (Exception ex)
            {
                ToastService.ShowError($"Hata oluştu: {ex.Message}", "Hata");
            }
        }
    }

    private void GoToAddContact()
    {
        Navigation.NavigateTo("/contacts/add");
    }



    private string GetCommunicationTypeIcon(CommunicationType type)
    {
        return type switch
        {
            CommunicationType.Phone => "📞",
            CommunicationType.Email => "📧",
            CommunicationType.Location => "📍",
            _ => "📋"
        };
    }
}
