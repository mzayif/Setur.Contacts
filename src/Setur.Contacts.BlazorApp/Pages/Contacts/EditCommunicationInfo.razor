@page "/contacts/{ContactId:guid}/communication/{CommunicationInfoId:guid}/edit"

@inject IContactService ContactService
@inject ICommunicationInfoService CommunicationInfoService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject IToastService ToastService

<PageTitle>ƒ∞leti≈üim Bilgisi D√ºzenle - Setur Contacts</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-edit me-2"></i>
                        ƒ∞leti≈üim Bilgisi D√ºzenle
                    </h4>
                </div>
                <div class="card-body">
                    @if (isLoading)
                    {
                        <div class="text-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Y√ºkleniyor...</span>
                            </div>
                            <p class="mt-2">ƒ∞leti≈üim bilgisi y√ºkleniyor...</p>
                        </div>
                    }
                    else if (communicationInfo != null && contact != null)
                    {
                        <div class="alert alert-info mb-4">
                            <strong>@contact.FirstName @contact.LastName</strong> ki≈üisinin ileti≈üim bilgisini d√ºzenliyorsunuz.
                        </div>

                        <EditForm Model="@updateRequest" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator />
                            
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="type" class="form-label">ƒ∞leti≈üim T√ºr√º *</label>
                                    <InputSelect id="type" class="form-select" @bind-Value="updateRequest.Type">
                                        <option value="">Se√ßiniz...</option>
                                        <option value="@CommunicationType.Phone">üìû Telefon</option>
                                        <option value="@CommunicationType.Email">üìß E-posta</option>
                                        <option value="@CommunicationType.Location">üìç Lokasyon</option>
                                    </InputSelect>
                                    <ValidationMessage For="@(() => updateRequest.Type)" />
                                </div>
                                
                                <div class="col-md-6 mb-3">
                                    <label for="value" class="form-label">Deƒüer *</label>
                                    <InputText id="value" class="form-control" @bind-Value="updateRequest.Value" />
                                    <ValidationMessage For="@(() => updateRequest.Value)" />
                                </div>
                            </div>
                            
                            <div class="d-flex justify-content-between">
                                <button type="button" class="btn btn-secondary" @onclick="GoBack">
                                    <i class="fas fa-arrow-left me-2"></i>
                                    Geri
                                </button>
                                
                                <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                    @if (isSubmitting)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                        <span>G√ºncelleniyor...</span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-save me-2"></i>
                                        <span>G√ºncelle</span>
                                    }
                                </button>
                            </div>
                        </EditForm>
                    }
                    else
                    {
                        <div class="alert alert-danger">
                            ƒ∞leti≈üim bilgisi bulunamadƒ±!
                        </div>
                        <button class="btn btn-secondary" @onclick="GoToContacts">
                            <i class="fas fa-arrow-left me-2"></i>
                            Ki≈üi Listesine D√∂n
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Guid ContactId { get; set; }

    [Parameter]
    public Guid CommunicationInfoId { get; set; }

    private UpdateCommunicationInfoRequest updateRequest = new();
    private CommunicationInfoResponse? communicationInfo;
    private ContactDetailResponse? contact;
    private bool isLoading = true;
    private bool isSubmitting = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        isLoading = true;
        try
        {
            // ƒ∞leti≈üim bilgisini y√ºkle
            var commResult = await CommunicationInfoService.GetCommunicationInfoByIdAsync(CommunicationInfoId);
            if (commResult.Success && commResult.Data != null)
            {
                communicationInfo = commResult.Data;
                
                // Mevcut verileri updateRequest'e kopyala
                updateRequest.Id = communicationInfo.Id;
                updateRequest.Type = communicationInfo.Type;
                updateRequest.Value = communicationInfo.Value;
            }
            else
            {
                ToastService.ShowError("ƒ∞leti≈üim bilgisi bulunamadƒ±!", "Hata");
                Navigation.NavigateTo($"/contacts/{ContactId}");
                return;
            }

            // Ki≈üi bilgilerini y√ºkle
            var contactResult = await ContactService.GetContactByIdAsync(ContactId);
            if (contactResult.Success && contactResult.Data != null)
            {
                contact = contactResult.Data;
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Veri y√ºklenirken hata olu≈ütu: {ex.Message}", "Hata");
            Navigation.NavigateTo($"/contacts/{ContactId}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        
        try
        {
            var result = await CommunicationInfoService.UpdateCommunicationInfoAsync(CommunicationInfoId, updateRequest);
            ToastService.ShowSuccess(result.Message, "Ba≈üarƒ±lƒ±");
            Navigation.NavigateTo($"/contacts/{ContactId}");
        }
        catch (Exception ex)
        {
            ToastService.ShowError($"Hata olu≈ütu: {ex.Message}", "Hata");
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/contacts/{ContactId}");
    }

    private void GoToContacts()
    {
        Navigation.NavigateTo("/contacts");
    }
}
